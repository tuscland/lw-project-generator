(in-package #.package-name)

(capi:define-interface application-interface (capi:cocoa-default-application-interface)
  ((main-interface
    :initform nil
    :accessor application-interface-main-interface))
  (:default-initargs
   :title #.product-name
   :destroy-callback 'application-interface-destroy))

(defun application-interface-destroy (application)
  (when-let (main-interface (application-interface-main-interface application))
    ;; Set application-interface to nil to prevent recursion back from
    ;; main-interface's destroy-callback.
    (setf (slot-value main-interface 'application-interface) nil)
    ;; Destroy the single drawing window.  When run as a delivered
    ;; application, this will cause the application to exit because it
    ;; has no more windows.
    (capi:destroy main-interface)))

(defun debugger-hook (condition old-debugger-hook)
  (declare (ignore old-debugger-hook))
  (let ((path (dbg:log-bug-form (format nil "Unexpected error occured: ~a" condition)
                                :message-stream nil)))
    (capi:display-message
            "~&Unexpected error occured:~%~%~4T~A.~%~%~
               Log file written to ~A.~%"
            condition path)
    (abort)))

(defun init-error-handling ()
  (setf *debugger-hook* #'debugger-hook))
